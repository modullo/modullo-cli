---

- name: Setup New WordPress Framework
  shell: |
    cd /tmp

    curl -LO https://wordpress.org/latest.tar.gz

    tar xzvf latest.tar.gz

    cp /tmp/wordpress/wp-config-sample.php /tmp/wordpress/wp-config.php

    cp -a /tmp/wordpress/. {{ system_app_directory }}

    sudo chown -R www-data:www-data {{ system_app_directory }}

  register: framework_configure_output_wordpress_new
  async: 500
  poll: 30
  become: true
  become_user: modullo


- name: Setup New WordPress Framework (Nginx Config Domain)
  ansible.builtin.lineinfile:
    path: "/etc/nginx/sites-enabled/{{ domain }}_ssl.conf"
    regexp: '^    root'
    line: "    root /var/www/{{ project }};"
  ignore_errors: true

- name: Setup New WordPress Framework (Nginx Config Files)
  ansible.builtin.lineinfile:
    path: "/etc/nginx/sites-enabled/{{ domain }}_ssl.conf"
    insertafter: '^    error_log'
    line: "\n\n    {{ wordpress_config_item.config }}"
  loop:
    - { config: 'location = /favicon.ico { log_not_found off; access_log off; }' }
    - { config: 'location = /robots.txt { log_not_found off; access_log off; allow all; }' }
    - { config: 'location ~* \.(css|gif|ico|jpeg|jpg|js|png)$ { expires max; log_not_found off; }' }
  loop_control:
    loop_var: wordpress_config_item
  ignore_errors: true


- name: Update WordPress Framework
  shell: |
    # update config

    wordpress_config_path={{ system_app_directory }}/wp-config.php

    sudo sed -i "s/^define( 'DB_NAME.*/define( 'DB_NAME', '{{ database_name }}' );/" $wordpress_config_path
    sudo sed -i "s/^define( 'DB_USER.*/define( 'DB_USER', 'root' );/" $wordpress_config_path
    sudo sed -i "s/^define( 'DB_PASSWORD.*/define( 'DB_PASSWORD', '{{ provisioning_database_root_password }}' );/" $wordpress_config_path
    sudo sed -i "s/^define( 'FS_METHOD.*/define( 'FS_METHOD', 'direct' );/" $wordpress_config_path
    
    sudo sed -i "s/^define( 'AUTH_KEY.*/define( 'AUTH_KEY', '{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters'], length=64) }}' );/" $wordpress_config_path
    sudo sed -i "s/^define( 'SECURE_AUTH_KEY.*/define( 'SECURE_AUTH_KEY', '{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters'], length=64) }}' );/" $wordpress_config_path
    sudo sed -i "s/^define( 'LOGGED_IN_KEY.*/define( 'FS_METHOD', '{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters'], length=64) }}' );/" $wordpress_config_path
    sudo sed -i "s/^define( 'NONCE_KEY.*/define( 'NONCE_KEY', '{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters'], length=64) }}' );/" $wordpress_config_path
    sudo sed -i "s/^define( 'AUTH_SALT.*/define( 'AUTH_SALT', '{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters'], length=64) }}' );/" $wordpress_config_path
    sudo sed -i "s/^define( 'SECURE_AUTH_SALT.*/define( 'SECURE_AUTH_SALT', '{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters'], length=64) }}' );/" $wordpress_config_path
    sudo sed -i "s/^define( 'LOGGED_IN_SALT.*/define( 'LOGGED_IN_SALT', '{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters'], length=64) }}' );/" $wordpress_config_path
    sudo sed -i "s/^define( 'NONCE_SALT.*/define( 'NONCE_SALT', '{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters'], length=64) }}' );/" $wordpress_config_path

    sudo service nginx restart

  register: framework_configure_output_wordpress_update
  async: 500
  poll: 30
  become: true
  become_user: modullo
